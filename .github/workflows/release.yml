name: Generate release APK and AAB
run-name: Build release files
on:
  push:
    #    workflows: [ Code quality check ]
    #    types: [ completed ]
    branches:
      - release/*
      - workflows
#  workflow_run:
#    branches:
#      - release/*
#      - workflows
#    workflows: [ 'Code quality check' ]
#    types:
#      - completed

jobs:
  apk:
    name: Generate release builds
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Generate keystore.properties
        run: |
          cat <<EOF > keystore.properties
          storePassword:${{ secrets.KEYSTORE_STORE_PASSWORD }}
          keyPassword:${{ secrets.KEYSTORE_KEY_PASSWORD }}
          keyAlias:${{ secrets.KEYSTORE_KEY_ALIAS }}
          storeFile:${{ secrets.KEYSTORE_STORE_FILE_PATH }}
          EOF

      - name: Create keystore
        run: echo "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 --decode > keystore.jks

      - name: Generate file name
        run: |
          VERSION_NAME=$(${{github.workspace}}/gradlew -q getVersion)
          MESSAGE=$(cat << EOF
          SimpleBudget-release-${VERSION_NAME}
          EOF)
          echo OUTPUT_NAME=$MESSAGE >> $GITHUB_ENV

      - name: Build release APK
        run: bash ./gradlew assembleRelease --stacktrace

      - name: Rename APK
        run:
          mv "app/build/outputs/apk/release/app-release.apk" "app/release/${{ env.OUTPUT_NAME }}.apk"

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: app/release/${{ env.OUTPUT_NAME }}.apk

      - name: Build release AAB
        run: bash ./gradlew bundleRelease --stacktrace

      - name: Rename AAB
        run:
          mv "app/build/outputs/bundle/release/app-release.aab" "app/release/${{ env.OUTPUT_NAME }}.aab"

      - name: Upload release AAB
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}
          path: app/release/${{ env.OUTPUT_NAME }}.aab